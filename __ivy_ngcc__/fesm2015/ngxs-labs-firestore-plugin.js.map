{"version":3,"file":"ngxs-labs-firestore-plugin.js","sources":["../../../src/lib/ngxs-firestore-connect.actions.ts","../../../src/lib/ngxs-firestore.state.ts","../../../src/lib/tokens.ts","../../../src/lib/actions.ts","../../../src/lib/ngxs-firestore-page.service.ts","../../../src/lib/ngxs-firestore.module.ts","../../../src/lib/ngxs-firestore.adapter.ts","../../../src/lib/ngxs-firestore.service.ts","../../../src/lib/action-decorator-helpers.ts","../../../src/lib/attach-action.ts","../../../src/lib/ngxs-firestore-connect.service.ts","../../../src/lib/ngxs-firestore-connections.selector.ts","../../../src/ngxs-labs-firestore-plugin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAOiB,4BAahB;AAbD,WAAiB,2BAA2B;AAC3C,IAAC,MAAa,eAAe;AAC9B,QACI,YAAmB,OAAe;AAAI,YAAnB,YAAO,GAAP,OAAO,CAAQ;AAAC,SAAG;AAC1C;AACE,IAHkB,oBAAI,GAAG,2BAA2B,CAAC;AACvD,IAFe,2CAAe,kBAG3B,CAAA;AACH,IAAE,MAAa,aAAa;AAC5B,QACI,YAAmB,OAAiD;AAAI,YAArD,YAAO,GAAP,OAAO,CAA0C;AAAC,SAAG;AAC5E;AACE,IAHkB,kBAAI,GAAG,yBAAyB,CAAC;AACrD,IAFe,yCAAa,gBAGzB,CAAA;AACH,IAAE,MAAa,kBAAkB;AACjC,QACI,YAAmB,OAAe;AAAI,YAAnB,YAAO,GAAP,OAAO,CAAQ;AAAC,SAAG;AAC1C;AAEA,IAJoB,uBAAI,GAAG,8BAA8B,CAAC;AAC1D,IAFe,8CAAkB,qBAG9B,CAAA;AACH,CAAC,EAbgB,2BAA2B,KAA3B,2BAA2B;AACtC;AAAC;AAEA;AAIF;AAGe;AAI2C;AAAmE;AAAG,ICCxH,kBAAkB,SAAlB,kBAAkB;AAAG,IAChC,UAAU,CAAC,IAA2C,KAAI;AAC5D,IAEE,eAAe,CACb,EAAE,QAAQ,EAAyC,EACnD,EAAE,OAAO,EAA+C;AACzD,QACC,MAAM,IAAI,GAAG;AACjB,YAAM,WAAW,EAAE,IAAI,IAAI,EAAE;AAC7B,YAAM,EAAE,EAAE,OAAO;AACjB,SAA4B,CAAC;AAC7B,QAAI,QAAQ,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,KAAG;AACH,IAEE,aAAa,CACX,EAAE,QAAQ,EAAyC,EACnD,EAAE,OAAO,EAA6C;AACvD,QACC,MAAM,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC;AAC3B,QAAI,QAAQ,CACN,KAAK,CAA0B;AACrC,YAAQ,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AACjG,SAAO,CAAC,CACH,CAAC;AACN,KAAG;AACH,IAEE,kBAAkB,CAChB,EAAE,QAAQ,EAAE,QAAQ,EAAyC,EAC7D,EAAE,OAAO,EAAkD;AAC5D,QACC,QAAQ,CACN,KAAK,CAA0B,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CACrF,CAAC;AACN,KAAG;AACH,EAAC;8CAtCA,UAAU;gKACT;AAIA;AAAa,IADZ,MAAM,CAAC,CAAC,2BAA2B,CAAC,eAAe,CAAC,CAAC;AACxD,yDASG;AAGD;AAAa,IADZ,MAAM,CAAC,CAAC,2BAA2B,CAAC,aAAa,CAAC,CAAC;AACtD,uDAUG;AAGD;AAAa,IADZ,MAAM,CAAC,CAAC,2BAA2B,CAAC,kBAAkB,CAAC,CAAC;AAC3D,4DAOG;AApCU,kBAAkB;AAAgB,IAP9C,KAAK,CAA0B;AAChC,QAAE,IAAI,EAAE,gBAAgB;AACxB,QAAE,QAAQ,EAAE;AACZ,YAAI,WAAW,EAAE,EAAE;AACnB,SAAG;AACH,KAAC,CAAC;AACF,GACa,kBAAkB,CAqC9B;;;0BACD;AAAC;AAAC,MCtDW,6BAA6B,GAAG,IAAI,cAAc,CAC7D,+BAA+B;AAC/B;AACF,MCTa,aAAa;AAC1B;AAAkB,kBAAI,GAAG,+BAA+B,CAAC;AACzD,MAEa,UAAU;AACvB,IACE,YAAmB,OAAY;AAAI,QAAhB,YAAO,GAAP,OAAO,CAAK;AAAC,KAAG;AACrC;AAFkB,eAAI,GAAG,4BAA4B,CAAC;AACtD,MAGa,WAAW;AACxB,IACE,YAAmB,OAAe;AAAI,QAAnB,YAAO,GAAP,OAAO,CAAQ;AAAC,KAAG;AACxC;AAFkB,gBAAI,GAAG,aAAa,CAAC;AACvC,MAGa,WAAW;AACxB,IACE,YAAmB,OAAe;AAAI,QAAnB,YAAO,GAAP,OAAO,CAAQ;AAAC,KAAG;AACxC;AAFkB,gBAAI,GAAG,aAAa;AACtC;AAAC,MCJY,0BAA0B;AACvC,IAAE,YAAoB,SAA2B;AAAI,QAA/B,cAAS,GAAT,SAAS,CAAkB;AAAC,KAAG;AACrD,IACE,QAAQ;AACV,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AACrC,KAAG;AACH;sDAPC,UAAU;4JACT;AAAC;AACU,YATJ,gBAAgB;AAAG;;;iFAAE;AAAC,MAiBlB,wBAAwB;AACrC,IAAE,YAAoB,QAAiB,EAAU,MAAkC;AAAI,QAAjE,aAAQ,GAAR,QAAQ,CAAS;AAAC,QAAS,WAAM,GAAN,MAAM,CAA4B;AAAC,KAAG;AACvF,IACE,MAAM,CACJ,OAA2C,EAC3C,IAAY,EACZ,OAA2E;AAC5E,QACC,OAAO,KAAK,CAAC;AACjB,YAAM,MAAM,KAAK,GAAoB,EAAE,CAAC;AACxC,YACM,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACvB,kBAAkB,CAAC,WAAW,EAAE,WAAW,CAAC,EAC5C,SAAS,CAAC,MAAM,CAAC,EACjB,GAAG,CAAC,CAAC,MAAM;AACnB,gBAAU,MAAM,UAAU,GAAkC,yBAAyB,CAAC,MAAM,CAAC,CAAC;AAC9F,gBAAU,MAAM,OAAO,GAAG,MAAM,KAAK,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC;AACtF,gBAAU,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,IAAI,aAAa,EAAE,CAAC;AACtE,aAAS,CAAC,EACF,MAAM,CAAC,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE;AACvC,gBAAU,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;AACnF,aAAS,CAAC,EACF,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE;AACpC,gBAAU,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;AACpE,gBAAU,IAAI,KAAK,GAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,KAAI,CAAC,CAAC;AAC1C,gBACU,IAAI,UAAU,KAAK,aAAa,EAAE;AAC5C,oBAAY,KAAK,IAAI,IAAI,CAAC;AAC1B,iBAAW;AAAC,qBAAK,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,EAAE;AACvC,oBAAY,KAAK,IAAI,IAAI,CAAC;AAC1B,iBAAW;AACX,gBACU,MAAM,IAAI,GAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,MAAK,KAAK,CAAC;AAChD,gBACU,IAAI,OAAO,EAAE;AACvB,oBAAY,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAClC,iBAAW;AAAC,qBAAK;AACjB,oBAAY,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;AAC/C,iBAAW;AACX,gBACU,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAClD,aAAS,CAAC,EACF,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE;AACxB,gBAAU,OAAO,CAAC,IAAI,CAAC;AACvB,aAAS,CAAC,EACF,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE;AACpC,gBAAU,OAAO,OAAO,CAAC,CAAC,GAAG;AAC7B,oBAAY,OAAO,OAAO;AAC1B,yBAAe,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,EAAE,GAAG,CAAC;AACpG,yBAAe,KAAK,CAAC,KAAK,CAAC,CAAC;AAC5B,iBAAW,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,OAAO;AACxB,oBAAc,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;AAC1D,iBAAa,CAAC,CACH,CAAC;AACZ,aAAS,CAAC,CACH,CAAC;AACR,SAAK,CAAC,CAAC;AACP,KAAG;AACH;2MAAC;AACD,iRA5DK;AAAC;EADL,UAAU,SAAC,rBAEI,YAnBP,OAAO;AAiBF,UAAU,EAAE,MAAM,EAAE,pBAjBd,YAmBqC,0BAA0B;AAAG;;;;8GACtF;AACA;AAAC,MCbY,mBAAmB;AAChC,IAAS,OAAO,OAAO,CAAC,OAAoC;AAAI,QAC5D,OAAO;AACX,YAAM,QAAQ,EAAE,mBAAmB;AACnC,YAAM,SAAS,EAAE;AACjB,gBAAQ;AACR,oBAAU,OAAO,EAAE,6BAA6B;AAChD,oBAAU,QAAQ,EAAE,OAAO,IAAK,EAAE,sBAAsB,EAAE,KAAK,EAAiC;AAChG,iBAAS;AACT,gBAAQ;AACR,oBAAU,OAAO,EAAE,0BAA0B;AAC7C,oBAAU,QAAQ,EAAE,0BAA0B;AAC9C,iBAAS;AACT,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH;+CAnBC,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC,YAAY,EAAE;GAAU,CAAC,UAAU,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,sBAAsB,CAAC,cAC7F;;;;;;;;gNACI;AAAC;AAAC,MCJM,oBAAoB;AACjC,IAAE,YACmC,SAA2B,EACtC,KAAY,EACwB,OAAmC;AAC9F,QAHkC,cAAS,GAAT,SAAS,CAAkB;AAAC,QACvC,UAAK,GAAL,KAAK,CAAO;AAAC,QACuB,YAAO,GAAP,OAAO,CAA4B;AACjG,KAAM;AACN;+NAAC;AACD,ySAPK;AAAC;EADL,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE,3CAGjC,YATQ,gBAAgB,uBASpB,MAAM,SAAC,gBAAgB;AAAS,YAN5B,KAAK,uBAOT,MAAM,SAAC,KAAK;AAAS,4CACrB,QAAQ,YAAI,MAAM,SAAC,6BAA6B;AAAQ;;;;;;;;;;;;;;;kCAAE;AAAC;AAAC,MCO3C,aAAa;AAAG,IACpC,YAAoD,OAA6B;AAAI,QAAjC,YAAO,GAAP,OAAO,CAAsB;AAAC,QAGxE,YAAO,GAAW,IAAI,CAAC;AACnC,QAAY,cAAS,GAAiD;AACtE,YAAI,WAAW,EAAE,CAAC,KAAK;AACvB,gBAAM,OAAO,KAAK,CAAC;AACnB,aAAK;AACL,YAAI,aAAa,EAAE,CAAC,QAAQ,EAAE,OAAO;AACrC,gBAAM,yBAAgB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAE,EAAG;AAChD,aAAK;AACL,SAAG,CAAC;AACJ,KAZuF;AACvF,IAYS,QAAQ;AACjB,QAAI,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC7C,KAAG;AACH,IACS,IAAI,CAAC,EAAU;AAAI,QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS;AACjC,aAAO,GAAG,CAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC9B,aAAO,eAAe,EAAE;AACxB,aAAO,IAAI,CACH,GAAG,CAAC,CAAC,WAAW;AACxB,YAAU,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE;AAC1C,gBAAY,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC3D,aAAW;AAAC,iBAAK;AACjB,gBAAY,OAAO,SAAS,CAAC;AAC7B,aAAW;AACX,SAAS,CAAC,CACH,CAAC;AACR,KAAG;AACH,IACS,QAAQ,CAAC,EAAU;AAAI,QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,KAAG;AACH,IACS,WAAW,CAAC,UAAmB,CAAC,GAAG,KAAK,GAAG;AAAI,QACpD,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS;AACjC,aAAO,UAAU,CAAI,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG;AACpC,YAAQ,OAAO,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AAC1D,SAAO,CAAC;AACR,aAAO,eAAe,EAAE;AACxB,aAAO,IAAI,CACH,GAAG,CAAC,CAAC,YAAY,KACf,YAAY,CAAC,GAAG,CAAC,CAAC,WAAW;AACvC,YAAY,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC/D,SAAW,CAAC,CACH,CACF,CAAC;AACR,KAAG;AACH,IACS,eAAe,CAAC,OAAiB;AAAI,QAC1C,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,KAAG;AACH,IACS,OAAO,CAAC,EAAU,EAAE,KAAiB,EAAE,UAAuB;AACvE,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;AAC9C,KAAG;AACH,IACS,OAAO,CAAC,EAAU;AAC3B,QAAI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AAC9C,KAAG;AACH,IACS,OAAO,CAAC,KAAiB;AAAI,QAClC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAG;AACH,IACS,OAAO,CAAC,KAAiB,EAAE,UAAuB;AAAI,QAC3D,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,QAAQ,CAAC;AACjB,QACI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AAC5E,YAAM,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/B,YAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC1C,SAAK;AAAC,aAAK;AACX,YAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC3B,YAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC,CAAC;AAClE,SAAK;AACL,QACI,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AACjD,KAAG;AACH,IACU,aAAa,CAAQ,GAAiC;AAChE,QAAI,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;AAC5B,QAAI,MAAM,EAAE,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;AACtD,QAAI,uCAAY,IAAI,KAAE,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,IAAG;AAC3C,KAAG;AACH,IACU,GAAG,CAAC,EAAU;AACxB,QAAI,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,KAAG;AACH,IACU,MAAM,CAAC,EAAU,EAAE,KAAU,EAAE,UAAuB;AAChE,QAAI,UAAU,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC/C,QACI,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;AAC1B,YAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AAC1C,YAAM,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACpB,SAAK;AACL,QACI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE;AAC7E,YAAM,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CACnD,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAChE,KAAK,CAAC,EAAE,CAAC,CACV,CAAC;AACR,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AACvE,SAAK;AACL,KAAG;AACH,IACU,MAAM,CAAC,EAAU;AAC3B,QAAI,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC9F,KAAG;AACH,IACU,SAAS;AACnB,QAAI,OAAO,SAAS,CAAC,MAAM,KAAK,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;AAC/D,KAAG;AACH;yCAvHC,UAAU;qHACT;AAAC;AACF,YAfQ,oBAAoB,uBAed,MAAM,SAAC,oBAAoB;AAAQ;;;;;;kCAAE;AAAC;AAAC,SCjBtC,eAAe,CAAC,UAAsB;AACtD;AAAY,IAAV,YAAO;AACT,YACI,YAAmB,MAAW;AAAI,gBAAf,WAAM,GAAN,MAAM,CAAK;AAAC,aAAG;AACtC,SAAG;AACH,QAHoB,OAAI,GAAG,GAAG,UAAU,CAAC,IAAI,YAAa;AACzD,WACG;AACJ,CAAC;AACD,SACgB,aAAa,CAAC,UAAsB;AACpD;AAAY,IAAV,YAAO;AACT,YACI,YAAmB,MAAW,EAAS,OAAY;AAAI,gBAApC,WAAM,GAAN,MAAM,CAAK;AAAC,gBAAQ,YAAO,GAAP,OAAO,CAAK;AAAC,aAAG;AAC3D,SAAG;AACH,QAHoB,OAAI,GAAG,GAAG,UAAU,CAAC,IAAI,UAAW;AACvD,WACG;AACJ,CAAC;AACD,SACgB,kBAAkB,CAAC,UAAsB;AACzD;AAAY,IAAV,YAAO;AACT,YACI,YAAmB,MAAW;AAAI,gBAAf,WAAM,GAAN,MAAM,CAAK;AAAC,aAAG;AACtC,SAAG;AACH,QAHoB,OAAI,GAAG,GAAG,UAAU,CAAC,IAAI,eAAgB;AAC5D,WACG;AACJ,CAAC;AACD,SACgB,aAAa,CAAC,UAAsB;AACpD;AAAY,IAAV,YAAO;AACT,YACI,YAAmB,MAAW,EAAS,KAAU;AAAI,gBAAlC,WAAM,GAAN,MAAM,CAAK;AAAC,gBAAQ,UAAK,GAAL,KAAK,CAAK;AAAC,aAAG;AACzD,SAAG;AACH,QAHoB,OAAI,GAAG,GAAG,UAAU,CAAC,IAAI,UAAW;AACvD,WACG;AACJ;AACA;AC3BA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;AAC7C,SACgB,YAAY,CAC1B,UAAe,EACf,MAAkB,EAClB,EAA4C,EAC5C,OAAuB;AACtB,IACD,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE;AACrC,QAAI,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;AAC5D,KAAG;AACH,IACE,MAAM,UAAU,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC;AACjD,IACE,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,UAAS,MAAW,EAAE,OAAY;AAAI,QACvE,OAAO,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC/B,KAAG,CAAC;AACJ,IACE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AACzE,CAAC;AAED,MAAM,mBAAmB,GAAG,CAAC,MAAkB;AAC/C,IAAE,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;AAC/D,IAAE,OAAO,GAAG,UAAU,EAAE,CAAC;AACzB,CAAC,CAAC;AACF;AAAkC;AChBlC,SAAS,cAAc,CAAC,MAAW;AACnC,IAAE,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,SAAS,QAAQ,CAAC,IAA+E;AACjG,IAAE,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACrC,IAAE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACjC,QAAI,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACtD,KAAG;AACH,IAAE,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,SAAS,OAAO,CAAI,EAAmB;AACvC,IAAE,OAAO,CAAC,MAAuB,KAC7B,KAAK,CAAC;AACV,QAAM,IAAI,KAAK,GAAG,IAAI,CAAC;AACvB,QAAM,OAAO,MAAM,CAAC,IAAI,CAChB,GAAG,CAAI,CAAC,OAAO;AACvB,YAAU,IAAI,KAAK,EAAE;AACrB,gBAAY,EAAE,CAAC,OAAO,CAAC,CAAC;AACxB,aAAW;AACX,YAAU,KAAK,GAAG,KAAK,CAAC;AACxB,SAAS,CAAC,CACH,CAAC;AACR,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AACrB,CAAC;AACD,MAEa,oBAAoB;AAAG,IAKlC,YAAoB,KAAY,EAAU,OAAgB;AAAI,QAA1C,UAAK,GAAL,KAAK,CAAO;AAAC,QAAS,YAAO,GAAP,OAAO,CAAS;AAAC,QAJnD,4BAAuB,GAAmB,EAAE,CAAC;AACvD,QAAU,+BAA0B,GAAa,EAAE,CAAC;AACpD,QAAU,mBAAc,GAAa,EAAE,CAAC;AACxC,KACgE;AAChE;AAEC;AACE;AACE;AACE;AACE;AACE;AACE;AAEJ;AACN,IADD,OAAO,CACL,UAA4B,EAC5B,IAKC;AACF,QACC,MAAM,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,IAAI,WAAW,CAAC;AACpF,QAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,cAAc,CAAC;AACnD,QAAI,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;AAC/C,QAKI,MAAM,QAAQ,GAAwC,EAAE,CAAC;AAC7D,QAAI,SAAS,WAAW,CAAC,EAAU;AAAI,YACjC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;AACzB,gBAAQ,MAAM,6BAA6B,GAAG,IAAI,OAAO,EAAE,CAAC;AAC5D,gBAAQ,QAAQ,CAAC,EAAE,CAAC,GAAG;AACvB,oBAAU,6BAA6B;AACvC,iBAAS,CAAC;AACV,aAAO;AACP,YACM,OAAO,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC1B,SAAK;AACL,QACI,YAAY,CAAC,kBAAkB,EAAE,UAAU,EAAE,CAAC,aAAa,EAAE,MAAM;AACvE,YAAM,MAAM,EAAE,6BAA6B,EAAE,GAAG,WAAW,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AACvG,YACM,MAAM,UAAU,GAAG,6BAA6B,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,YACM,IAAI,cAAc,EAAE;AAC1B,gBAAQ,OAAO,UAAU,CAAC;AAC1B,aAAO;AACP,YACM,IAAI,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;AAC/F,gBAAQ,OAAO;AACf,aAAO;AACP,YACM,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;AACnF,gBAAQ,OAAO,UAAU,CAAC;AAC1B,aAAO;AACP,YACM,OAAO,UAAU,CAAC;AACxB,SAAK,CAAC,CAAC;AACP,QACI,MAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CACzC,kBAAkB,CAAC,UAAU,CAAC;AACnC;AACE;AACE,QAAC,MAAM,CAAC,CAAC,MAAM;AACpB,YAAQ,OAAO,cAAc,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AACtH,SAAO,CAAC;AACP;AACE,QAAG,MAAM,CAAC,CAAC,MAAM;AACpB,YAAQ,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AACxF,SAAO,CAAC,EACF,GAAG,CAAC,CAAC,MAAM;AACjB,YAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAC5E,SAAO,CAAC,CACH,CAAC;AACN,QACI,MAAM,uBAAuB,GAAG,CAAC,MAAM;AAC3C,YAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;AAC/B,YAAM,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI;AAClC;AACI,YAAI,OAAO,CAAC,CAAC,CAAC;AAClB,gBAAU,MAAM,oBAAoB,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC;AACnE,gBAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;AAChE,gBAAU,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAC1F;AACM,gBAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChH,gBACU,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAI,2BAA2B,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAC3F,CAAC;AACZ,aAAS,CAAC;AACT;AACI,YAAG,GAAG,CAAC,CAAC,OAAO;AACpB,gBAAU,MAAM,kBAAkB,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;AAC/D,gBAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;AACvE,gBAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAI,2BAA2B,CAAC,aAAa,CAAC;AAC1D,oBAAc,EAAE,EAAE,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC;AAC3D,oBAAc,KAAK,EAAE,OAAO;AAC5B,iBAAa,CAAC,CACH,CAAC;AACZ,aAAS,CAAC;AACT;AACI,YAAG,OAAO,CAAC;AAChB,gBAAU,IAAI,yBAAyB,KAAK,WAAW,EAAE;AACzD,oBAAY,MAAM,EAAE,6BAA6B,EAAE,GAAG,WAAW,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAC7G,oBAAY,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvD,iBAAW;AACX,aAAS,CAAC;AACT;AACI,YAAG,SAAS,CACP,IAAI,CACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC,EACpD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CACpD,MAAM,CAAC,CAAC,gBAAgB;AACtC,gBAAgB,MAAM,EAAE,OAAO,EAAE,GAAG,gBAAgB,CAAC;AACrD,gBAAgB,IAAI,CAAC,OAAO,EAAE;AAC9B,oBAAkB,OAAO,KAAK,CAAC;AAC/B,iBAAiB;AACjB,gBAAgB,MAAM,oBAAoB,GAAG,QAAQ,CAAC;AACtD,oBAAkB,UAAU,EAAE,OAAO,CAAC,WAAW,IAAI,OAAO;AAC5D,oBAAkB,MAAM,EAAE,gBAAgB,CAAC,OAAO;AAClD,oBAAkB,OAAO;AACzB,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,IAAI,oBAAoB,KAAK,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE;AACxF,oBAAkB,OAAO,IAAI,CAAC;AAC9B,iBAAiB;AACjB,gBACgB,OAAO,KAAK,CAAC;AAC7B,aAAe,CAAC,CACH,CACF,CACF;AACR;AACI,YAAG,SAAS,CACP,IAAI,CAAC,OAAO,CAAC,IAAI,CACf,kBAAkB,CAAC,UAAU,CAAC,EAC9B,MAAM,CAAC,CAAC,gBAAgB;AACpC,gBAAc,IAAI,CAAC,cAAc,EAAE;AACnC,oBAAgB,OAAO,KAAK,CAAC;AAC7B,iBAAe;AACf;AACE,gBAAY,IAAI,gBAAgB,KAAK,MAAM,EAAE;AAC/C,oBAAgB,OAAO,KAAK,CAAC;AAC7B,iBAAe;AACf,gBAAc,MAAM,wBAAwB,GAAG,QAAQ,CAAC;AACxD,oBAAgB,UAAU;AAC1B,oBAAgB,MAAM,EAAE,gBAAgB;AACxC,oBAAgB,OAAO;AACvB,iBAAe,CAAC,CAAC;AACjB,gBAAc,OAAO,wBAAwB,KAAK,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;AAC5F,aAAa,CAAC,CACH,CACF,EACD,QAAQ,CAAC;AACjB,gBAAU,MAAM,uBAAuB,GAAG,kBAAkB,CAAC,UAAU,CAAC,CAAC;AACzE,gBAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC;AACnE,gBAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAI,2BAA2B,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAC9F,CAAC;AACZ,gBAAU,IAAI,CAAC,0BAA0B,CAAC,MAAM,CACpC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAClF,CAAC,CACF,CAAC;AACZ;AAEK,gBAAK,IAAI,yBAAyB,KAAK,iBAAiB,EAAE;AAC/D,oBAAY,MAAM,EAAE,6BAA6B,EAAE,GAAG,WAAW,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAC7G,oBAAY,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvD,iBAAW;AACX,aAAS,CAAC,EACF,UAAU,CAAC,CAAC,GAAG;AACvB,gBAAU,MAAM,EAAE,6BAA6B,EAAE,GAAG,WAAW,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAC3G,gBAAU,6BAA6B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACnD,gBACU,MAAM,kBAAkB,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;AAC/D,gBAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AACnE,gBACU,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACxB,aAAS,CAAC,CACH,CAAC;AACR,SAAK,CAAC;AACN,QACI,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;AAC7G,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,IAAI,CAAC,uBAAuB,EAAE;AACtC,YAAM,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AACvE,SAAK;AACL,KAAG;AACH;iLAAC;AACD,+OArMK;AAAC;EADL,UAAU,ZACyC,YA1C3C,KAAK;AAyCF,EAAE,UAAU,EAAE,MAAM,pBAzCd,YAAU,OAAO;AAyCD,AAzCI;;;;gGAAE;AAAC;AAAC,WCEmC,CAAC,KAA8B;AAC5G,IAAE,OAAO,KAAK,CAAC,WAAW,CAAC;AAC3B;AAAG,MAFU,wBAAwB,GAAG,cAAc,CAAC,CAAC,kBAAkB,CAAC;AAAO;ACHlF;AACA;AACA;AACA;AACA;AAI6M","sourcesContent":["namespace NgxsFirestoreDebugPayloads {\n  export interface StreamEmitted {\n    id: string;\n    items: any;\n  }\n}\n\nexport namespace NgxsFirestoreConnectActions {\n  export class StreamConnected {\n    static readonly type = '[NgxsFirestore] Connected';\n    constructor(public payload: string) {}\n  }\n  export class StreamEmitted {\n    static readonly type = '[NgxsFirestore] Emitted';\n    constructor(public payload: NgxsFirestoreDebugPayloads.StreamEmitted) {}\n  }\n  export class StreamDisconnected {\n    static readonly type = '[NgxsFirestore] Disconnected';\n    constructor(public payload: string) {}\n  }\n}\n","import { State, StateContext, NgxsOnInit, Action } from '@ngxs/store';\nimport { NgxsFirestoreConnectActions } from './ngxs-firestore-connect.actions';\nimport { patch, insertItem, removeItem, updateItem } from '@ngxs/store/operators';\nimport { Injectable } from '@angular/core';\n\nexport interface FirestoreConnection {\n  id: string;\n  connectedAt: Date;\n  emmitedAt: Date[];\n}\n\nexport interface NgxsFirestoreStateModel {\n  connections: FirestoreConnection[];\n}\n\n@State<NgxsFirestoreStateModel>({\n  name: 'ngxs_firestore',\n  defaults: {\n    connections: []\n  }\n})\n@Injectable()\nexport class NgxsFirestoreState implements NgxsOnInit {\n  ngxsOnInit(_ctx: StateContext<NgxsFirestoreStateModel>) {}\n\n  @Action([NgxsFirestoreConnectActions.StreamConnected])\n  streamConnected(\n    { setState }: StateContext<NgxsFirestoreStateModel>,\n    { payload }: NgxsFirestoreConnectActions.StreamConnected\n  ) {\n    const conn = {\n      connectedAt: new Date(),\n      id: payload\n    } as FirestoreConnection;\n    setState(patch({ connections: insertItem(conn) }));\n  }\n\n  @Action([NgxsFirestoreConnectActions.StreamEmitted])\n  streamEmitted(\n    { setState }: StateContext<NgxsFirestoreStateModel>,\n    { payload }: NgxsFirestoreConnectActions.StreamEmitted\n  ) {\n    const { id } = payload;\n    setState(\n      patch<NgxsFirestoreStateModel>({\n        connections: updateItem((x) => x.id === id, patch({ emmitedAt: insertItem(new Date()) }))\n      })\n    );\n  }\n\n  @Action([NgxsFirestoreConnectActions.StreamDisconnected])\n  streamDisconnected(\n    { setState, getState }: StateContext<NgxsFirestoreStateModel>,\n    { payload }: NgxsFirestoreConnectActions.StreamDisconnected\n  ) {\n    setState(\n      patch<NgxsFirestoreStateModel>({ connections: removeItem((x) => x.id === payload) })\n    );\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface NgxsFirestoreModuleOptions {\n  timeoutWriteOperations: number | false;\n}\n\nexport const NGXS_FIRESTORE_MODULE_OPTIONS = new InjectionToken<NgxsFirestoreModuleOptions>(\n  'NGXS_FIRESTORE_MODULE_OPTIONS'\n);\n","export class DisconnectAll {\n  static readonly type = '[NgxsFirestore] DisconnectAll';\n}\n\nexport class Disconnect {\n  static readonly type = '[NgxsFirestore] Disconnect';\n  constructor(public payload: any) {}\n}\n\nexport class GetNextPage {\n  static readonly type = 'GetNextPage';\n  constructor(public payload: string) {}\n}\n\nexport class GetLastPage {\n  static readonly type = 'GetLastPage';\n  constructor(public payload: string) {}\n}\n","import { Injectable } from '@angular/core';\nimport { defer, Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\nimport { Actions, getActionTypeFromInstance, ofActionDispatched } from '@ngxs/store';\nimport { AngularFirestore, FieldPath, QueryFn } from '@angular/fire/firestore';\nimport { GetNextPage, GetLastPage } from './actions';\nexport interface FirestorePage {\n  limit: number;\n  id: string;\n}\n\n@Injectable()\nexport class NgxsFirestorePageIdService {\n  constructor(private firestore: AngularFirestore) {}\n\n  createId() {\n    return this.firestore.createId();\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class NgxsFirestorePageService {\n  constructor(private actions$: Actions, private pageId: NgxsFirestorePageIdService) {}\n\n  create<T>(\n    queryFn: (pageFn: QueryFn) => Observable<T>,\n    size: number,\n    orderBy: { fieldPath: string | FieldPath; directionStr?: 'desc' | 'asc' }[]\n  ): Observable<{ results: T; pageId: string }> {\n    return defer(() => {\n      const pages: FirestorePage[] = [];\n\n      return this.actions$.pipe(\n        ofActionDispatched(GetNextPage, GetLastPage),\n        startWith('INIT'),\n        map((action) => {\n          const actionType = <'GetNextPage' | 'GetLastPage'>getActionTypeFromInstance(action);\n          const payload = action === 'INIT' ? this.pageId.createId() : action.payload;\n          return { payload, actionType: actionType || 'GetNextPage' };\n        }),\n        filter(({ payload, actionType }) => {\n          return pages.length === 0 || !!pages.find((page) => page.id === payload);\n        }),\n        map(({ payload, actionType }) => {\n          const thePage = pages.find((page) => page.id === payload);\n          let limit = thePage?.limit || 0;\n\n          if (actionType === 'GetNextPage') {\n            limit += size;\n          } else if (limit - size > 0) {\n            limit -= size;\n          }\n\n          const skip = thePage?.limit === limit;\n\n          if (thePage) {\n            thePage.limit = limit;\n          } else {\n            pages.push({ id: payload, limit });\n          }\n\n          return { pageId: payload, limit, skip };\n        }),\n        filter(({ skip }) => {\n          return !skip;\n        }),\n        switchMap(({ pageId, limit }) => {\n          return queryFn((ref) => {\n            return orderBy\n              .reduce((prev, curr) => prev.orderBy(curr.fieldPath, curr.directionStr || 'asc'), ref)\n              .limit(limit);\n          }).pipe(\n            map((results) => {\n              return { results, pageId, pageSize: limit };\n            })\n          );\n        })\n      );\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsFirestoreState } from './ngxs-firestore.state';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { NgxsFirestoreModuleOptions, NGXS_FIRESTORE_MODULE_OPTIONS } from './tokens';\nimport { NgxsFirestorePageIdService } from './ngxs-firestore-page.service';\n\n@NgModule({\n  imports: [CommonModule, NgxsModule.forFeature([NgxsFirestoreState]), AngularFirestoreModule]\n})\nexport class NgxsFirestoreModule {\n  public static forRoot(options?: NgxsFirestoreModuleOptions): ModuleWithProviders<NgxsFirestoreModule> {\n    return {\n      ngModule: NgxsFirestoreModule,\n      providers: [\n        {\n          provide: NGXS_FIRESTORE_MODULE_OPTIONS,\n          useValue: options || ({ timeoutWriteOperations: false } as NgxsFirestoreModuleOptions)\n        },\n        {\n          provide: NgxsFirestorePageIdService,\n          useClass: NgxsFirestorePageIdService\n        }\n      ]\n    };\n  }\n}\n","import { AngularFirestore } from '@angular/fire/firestore';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { NgxsFirestoreModuleOptions, NGXS_FIRESTORE_MODULE_OPTIONS } from './tokens';\nimport { Store } from '@ngxs/store';\nimport 'firebase/firestore';\n\n@Injectable({ providedIn: 'root' })\nexport class NgxsFirestoreAdapter {\n  constructor(\n    @Inject(AngularFirestore) public firestore: AngularFirestore,\n    @Inject(Store) public store: Store,\n    @Optional() @Inject(NGXS_FIRESTORE_MODULE_OPTIONS) public options: NgxsFirestoreModuleOptions\n  ) {}\n}\n","import { QueryFn, QueryDocumentSnapshot } from '@angular/fire/firestore';\nimport { Observable, from, of } from 'rxjs';\nimport { Inject, Injectable } from '@angular/core';\nimport { map, take, mapTo, timeoutWith } from 'rxjs/operators';\nimport { NgxsFirestoreAdapter } from './ngxs-firestore.adapter';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\n/**\n * Changes the behavior of a set() call to only replace the values specified\n * in its data argument. Fields omitted from the set() call remain\n * untouched.\n */\ninterface SetOptions {\n  merge: boolean;\n}\n\n@Injectable()\nexport abstract class NgxsFirestore<T> {\n  constructor(@Inject(NgxsFirestoreAdapter) protected adapter: NgxsFirestoreAdapter) {}\n\n  protected abstract path: string;\n  protected idField: string = 'id';\n  protected converter: firebase.firestore.FirestoreDataConverter<T> = {\n    toFirestore: (value) => {\n      return value;\n    },\n    fromFirestore: (snapshot, options) => {\n      return { ...(<T>snapshot.data(options)) };\n    }\n  };\n\n  public createId() {\n    return this.adapter.firestore.createId();\n  }\n\n  public doc$(id: string): Observable<T> {\n    return this.adapter.firestore\n      .doc<T>(this.docRef(id))\n      .snapshotChanges()\n      .pipe(\n        map((docSnapshot) => {\n          if (docSnapshot.payload.exists) {\n            return this.getDataWithId(docSnapshot.payload);\n          } else {\n            return undefined;\n          }\n        })\n      );\n  }\n\n  public docOnce$(id: string): Observable<T> {\n    return this.doc$(id).pipe(take(1));\n  }\n\n  public collection$(queryFn: QueryFn = (ref) => ref): Observable<T[]> {\n    return this.adapter.firestore\n      .collection<T>(this.path, (ref) => {\n        return queryFn(ref.withConverter(this.converter));\n      })\n      .snapshotChanges()\n      .pipe(\n        map((docSnapshots) =>\n          docSnapshots.map((docSnapshot) => {\n            return this.getDataWithId(docSnapshot.payload.doc);\n          })\n        )\n      );\n  }\n\n  public collectionOnce$(queryFn?: QueryFn): Observable<T[]> {\n    return this.collection$(queryFn).pipe(take(1));\n  }\n\n  public update$(id: string, value: Partial<T>, setOptions?: SetOptions) {\n    return this.docSet(id, value, setOptions);\n  }\n\n  public delete$(id: string) {\n    return from(this.doc(id).delete()).pipe();\n  }\n\n  public create$(value: Partial<T>): Observable<string> {\n    return this.upsert$(value);\n  }\n\n  public upsert$(value: Partial<T>, setOptions?: SetOptions): Observable<string> {\n    let id;\n    let newValue;\n\n    if (Object.keys(value).includes(this.idField) && !!value[this.idField]) {\n      id = value[this.idField];\n      newValue = Object.assign({}, value);\n    } else {\n      id = this.createId();\n      newValue = Object.assign({}, value, { [this.idField]: id });\n    }\n\n    return this.docSet(id, newValue, setOptions);\n  }\n\n  private getDataWithId<TData>(doc: QueryDocumentSnapshot<TData>) {\n    const data = doc.data();\n    const id = (data && data[this.idField]) || doc.id;\n    return { ...data, [this.idField]: id };\n  }\n\n  private doc(id: string) {\n    return this.adapter.firestore.doc(this.docRef(id));\n  }\n\n  private docSet(id: string, value: any, setOptions?: SetOptions) {\n    setOptions = setOptions || { merge: true };\n\n    if (this.isOffline()) {\n      this.doc(id).set(value, setOptions);\n      return of(id);\n    }\n\n    if (this.adapter.options && this.adapter.options.timeoutWriteOperations) {\n      return from(this.doc(id).set(value, setOptions)).pipe(\n        timeoutWith(this.adapter.options.timeoutWriteOperations, of(id)),\n        mapTo(id)\n      );\n    } else {\n      return from(this.doc(id).set(value, setOptions)).pipe(mapTo(id));\n    }\n  }\n\n  private docRef(id: string) {\n    return this.adapter.firestore.doc(`${this.path}/${id}`).ref.withConverter(this.converter);\n  }\n\n  private isOffline() {\n    return navigator.onLine !== undefined && !navigator.onLine;\n  }\n}\n","import { ActionType } from '@ngxs/store';\n\nexport function StreamConnected(actionType: ActionType) {\n  return class {\n    static readonly type = `${actionType.type} Connected`;\n    constructor(public action: any) {}\n  };\n}\n\nexport function StreamEmitted(actionType: ActionType) {\n  return class {\n    static readonly type = `${actionType.type} Emitted`;\n    constructor(public action: any, public payload: any) {}\n  };\n}\n\nexport function StreamDisconnected(actionType: ActionType) {\n  return class {\n    static readonly type = `${actionType.type} Disconnected`;\n    constructor(public action: any) {}\n  };\n}\n\nexport function StreamErrored(actionType: ActionType) {\n  return class {\n    static readonly type = `${actionType.type} Errored`;\n    constructor(public action: any, public error: any) {}\n  };\n}\n","import { Action, ActionOptions, ActionType, StateContext } from '@ngxs/store';\n\n/**\n * This key is used to retrieve static metadatas on state classes.\n * This constant is taken from the core codebase\n */\nconst META_OPTIONS_KEY = 'NGXS_OPTIONS_META';\n\nexport function attachAction<S, A>(\n  storeClass: any,\n  action: ActionType,\n  fn: (ctx: StateContext<S>, action: A) => any,\n  options?: ActionOptions\n): void {\n  if (!storeClass[META_OPTIONS_KEY]) {\n    throw new Error('storeClass is not a valid NGXS Store');\n  }\n\n  const methodName = getActionMethodName(action);\n\n  storeClass.prototype[methodName] = function(_state: any, _action: any): any {\n    return fn(_state, _action);\n  };\n\n  Action(action, options)({ constructor: storeClass }, methodName, null);\n}\n\nconst getActionMethodName = (action: ActionType) => {\n  const actionName = action.type.replace(/[^a-zA-Z0-9]+/g, '');\n  return `${actionName}`;\n};\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Store, ActionType, Actions, ofActionDispatched } from '@ngxs/store';\nimport { tap, catchError, mergeMap, takeUntil, finalize, filter, take, share } from 'rxjs/operators';\nimport { Observable, race, Subscription, Subject, defer, of } from 'rxjs';\nimport { StreamConnected, StreamEmitted, StreamDisconnected, StreamErrored } from './action-decorator-helpers';\nimport { NgxsFirestoreConnectActions } from './ngxs-firestore-connect.actions';\nimport { DisconnectAll, Disconnect } from './actions';\nimport { attachAction } from './attach-action';\nimport { NgxsFirestoreState } from './ngxs-firestore.state';\n\ninterface ActionTypeDef<T> {\n  type: string;\n  new (...args: any): T;\n}\n\nfunction defaultTrackBy(action: any) {\n  return '';\n}\n\nfunction streamId(opts: { actionType: ActionType; action: any; trackBy: (action: any) => string }) {\n  let id = `${opts.actionType.type}`;\n  if (opts.trackBy(opts.action)) {\n    id = id.concat(` (${opts.trackBy(opts.action)})`);\n  }\n  return id;\n}\n\nfunction tapOnce<T>(fn: (value) => void) {\n  return (source: Observable<any>) =>\n    defer(() => {\n      let first = true;\n      return source.pipe(\n        tap<T>((payload) => {\n          if (first) {\n            fn(payload);\n          }\n          first = false;\n        })\n      );\n    }).pipe(share());\n}\n\n@Injectable({ providedIn: 'root' })\nexport class NgxsFirestoreConnect implements OnDestroy {\n  private firestoreConnectionsSub: Subscription[] = [];\n  private activeFirestoreConnections: string[] = [];\n  private actionsPending: string[] = [];\n\n  constructor(private store: Store, private actions: Actions) {}\n\n  /**\n   * Connect a query that will dispatch a `StreamEmitted` action on each emission.\n   *\n   * @param actionType Action to connect with\n   * @param opts.to Firestore Query to connect with\n   * @param opts.trackBy used to allow multiple connections for a same action, and Disconnect them individually\n   * @param opts.connectedActionFinishesOn complete connected action on first emit or stream completed\n   * @param opts.cancelPrevious cancel previous connected action, (when used combined with trackBy, will cancel stream with same id)\n   */\n  connect<T>(\n    actionType: ActionTypeDef<T>,\n    opts: {\n      to: (action: T) => Observable<any>;\n      trackBy?: (action: T) => string;\n      connectedActionFinishesOn?: 'FirstEmit' | 'StreamCompleted';\n      cancelPrevious?: boolean;\n    }\n  ) {\n    const connectedActionFinishesOn = opts.connectedActionFinishesOn || 'FirstEmit';\n    const trackBy = opts.trackBy || defaultTrackBy;\n    const cancelPrevious = opts.cancelPrevious;\n\n    interface CompletedHandler {\n      actionCompletedHandlerSubject: Subject<unknown>;\n    }\n\n    const subjects: { [key: string]: CompletedHandler } = {};\n    function getSubjects(id: string): CompletedHandler {\n      if (!subjects[id]) {\n        const actionCompletedHandlerSubject = new Subject();\n        subjects[id] = {\n          actionCompletedHandlerSubject\n        };\n      }\n\n      return subjects[id];\n    }\n\n    attachAction(NgxsFirestoreState, actionType, (_stateContext, action) => {\n      const { actionCompletedHandlerSubject } = getSubjects(streamId({ actionType, action, trackBy }));\n\n      const completed$ = actionCompletedHandlerSubject.asObservable().pipe(take(1));\n\n      if (cancelPrevious) {\n        return completed$;\n      }\n\n      if (this.activeFirestoreConnections.includes(streamId({ actionType, action, trackBy }))) {\n        return;\n      }\n\n      if (this.actionsPending.includes(streamId({ actionType, action, trackBy }))) {\n        return completed$;\n      }\n\n      return completed$;\n    });\n\n    const actionDispatched$ = this.actions.pipe(\n      ofActionDispatched(actionType),\n      // filter actions not connected already\n      // or cancelPrevious\n      filter((action) => {\n        return cancelPrevious || !this.activeFirestoreConnections.includes(streamId({ actionType, action, trackBy }));\n      }),\n      // filter actions dispatched on same tick\n      filter((action) => {\n        return !this.actionsPending.includes(streamId({ actionType, action, trackBy }));\n      }),\n      tap((action) => {\n        this.actionsPending.push(streamId({ actionType, action, trackBy }));\n      })\n    );\n\n    const firestoreStreamHandler$ = (action) => {\n      const streamFn = opts.to;\n      return streamFn(action).pipe(\n        // connected\n        tapOnce((_) => {\n          const StreamConnectedClass = StreamConnected(actionType);\n          this.store.dispatch(new StreamConnectedClass(action));\n          this.activeFirestoreConnections.push(streamId({ actionType, action, trackBy }));\n          // remove from actionsPending once connected\n          this.actionsPending.splice(this.actionsPending.indexOf(streamId({ actionType, action, trackBy })), 1);\n\n          this.store.dispatch(\n            new NgxsFirestoreConnectActions.StreamConnected(streamId({ actionType, action, trackBy }))\n          );\n        }),\n        // emmited\n        tap((payload) => {\n          const StreamEmittedClass = StreamEmitted(actionType);\n          this.store.dispatch(new StreamEmittedClass(action, payload));\n          this.store.dispatch(\n            new NgxsFirestoreConnectActions.StreamEmitted({\n              id: streamId({ actionType, action, trackBy }),\n              items: payload\n            })\n          );\n        }),\n        // completed if FirstEmit\n        tapOnce(() => {\n          if (connectedActionFinishesOn === 'FirstEmit') {\n            const { actionCompletedHandlerSubject } = getSubjects(streamId({ actionType, action, trackBy }));\n            actionCompletedHandlerSubject.next(action);\n          }\n        }),\n        // disconnect on Disconnect\n        takeUntil(\n          race(\n            this.actions.pipe(ofActionDispatched(DisconnectAll)),\n            this.actions.pipe(ofActionDispatched(Disconnect)).pipe(\n              filter((disconnectAction) => {\n                const { payload } = disconnectAction;\n                if (!payload) {\n                  return false;\n                }\n                const disconnectedStreamId = streamId({\n                  actionType: payload.constructor || payload,\n                  action: disconnectAction.payload,\n                  trackBy\n                });\n                if (disconnectedStreamId === streamId({ actionType, action, trackBy })) {\n                  return true;\n                }\n\n                return false;\n              })\n            )\n          )\n        ),\n        // disconnect on action re-dispatched\n        takeUntil(\n          this.actions.pipe(\n            ofActionDispatched(actionType),\n            filter((dispatchedAction) => {\n              if (!cancelPrevious) {\n                return false;\n              }\n              //SELF\n              if (dispatchedAction === action) {\n                return false;\n              }\n              const dispatchedActionStreamId = streamId({\n                actionType,\n                action: dispatchedAction,\n                trackBy\n              });\n              return dispatchedActionStreamId === streamId({ actionType, action, trackBy });\n            })\n          )\n        ),\n        finalize(() => {\n          const StreamDisconnectedClass = StreamDisconnected(actionType);\n          this.store.dispatch(new StreamDisconnectedClass(action));\n          this.store.dispatch(\n            new NgxsFirestoreConnectActions.StreamDisconnected(streamId({ actionType, action, trackBy }))\n          );\n          this.activeFirestoreConnections.splice(\n            this.activeFirestoreConnections.indexOf(streamId({ actionType, action, trackBy })),\n            1\n          );\n\n          // completed if StreamCompleted\n          if (connectedActionFinishesOn === 'StreamCompleted') {\n            const { actionCompletedHandlerSubject } = getSubjects(streamId({ actionType, action, trackBy }));\n            actionCompletedHandlerSubject.next(action);\n          }\n        }),\n        catchError((err) => {\n          const { actionCompletedHandlerSubject } = getSubjects(streamId({ actionType, action, trackBy }));\n          actionCompletedHandlerSubject.error(err);\n\n          const StreamErroredClass = StreamErrored(actionType);\n          this.store.dispatch(new StreamErroredClass(action, err));\n\n          return of({});\n        })\n      );\n    };\n\n    this.firestoreConnectionsSub.push(actionDispatched$.pipe(mergeMap(firestoreStreamHandler$)).subscribe());\n  }\n\n  ngOnDestroy() {\n    if (this.firestoreConnectionsSub) {\n      this.firestoreConnectionsSub.forEach((sub) => sub.unsubscribe());\n    }\n  }\n}\n","import { createSelector } from '@ngxs/store';\nimport { NgxsFirestoreState, NgxsFirestoreStateModel } from './ngxs-firestore.state';\n\nexport const ngxsFirectoreConnections = createSelector([NgxsFirestoreState], (state: NgxsFirestoreStateModel) => {\n  return state.connections;\n});\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NgxsFirestoreConnectActions as ɵb} from './lib/ngxs-firestore-connect.actions';\nexport {NgxsFirestoreState as ɵa} from './lib/ngxs-firestore.state';\nexport {NGXS_FIRESTORE_MODULE_OPTIONS as ɵd,NgxsFirestoreModuleOptions as ɵc} from './lib/tokens';"]}