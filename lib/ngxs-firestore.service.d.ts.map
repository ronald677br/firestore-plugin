{"version":3,"file":"ngxs-firestore.service.d.ts","sources":["ngxs-firestore.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { QueryFn } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { NgxsFirestoreAdapter } from './ngxs-firestore.adapter';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n/**\n * Changes the behavior of a set() call to only replace the values specified\n * in its data argument. Fields omitted from the set() call remain\n * untouched.\n */\ninterface SetOptions {\n    merge: boolean;\n}\nexport declare abstract class NgxsFirestore<T> {\n    protected adapter: NgxsFirestoreAdapter;\n    constructor(adapter: NgxsFirestoreAdapter);\n    protected abstract path: string;\n    protected idField: string;\n    protected converter: firebase.firestore.FirestoreDataConverter<T>;\n    createId(): string;\n    doc$(id: string): Observable<T>;\n    docOnce$(id: string): Observable<T>;\n    collection$(queryFn?: QueryFn): Observable<T[]>;\n    collectionOnce$(queryFn?: QueryFn): Observable<T[]>;\n    update$(id: string, value: Partial<T>, setOptions?: SetOptions): Observable<string>;\n    delete$(id: string): Observable<void>;\n    create$(value: Partial<T>): Observable<string>;\n    upsert$(value: Partial<T>, setOptions?: SetOptions): Observable<string>;\n    private getDataWithId;\n    private doc;\n    private docSet;\n    private docRef;\n    private isOffline;\n}\nexport {};\n"]}